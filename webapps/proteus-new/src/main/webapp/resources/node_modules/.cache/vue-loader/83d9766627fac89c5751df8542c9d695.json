{"remainingRequest":"/media/Workings/GSOC-2018/drat/proteus-vue/proteus/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/Workings/GSOC-2018/drat/proteus-vue/proteus/src/components/barchartcomp.vue?vue&type=style&index=0&lang=css","dependencies":[{"path":"/media/Workings/GSOC-2018/drat/proteus-vue/proteus/src/components/barchartcomp.vue","mtime":1530692183907},{"path":"/media/Workings/GSOC-2018/drat/proteus-vue/proteus/node_modules/css-loader/index.js","mtime":1529100185366},{"path":"/media/Workings/GSOC-2018/drat/proteus-vue/proteus/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1521907989000},{"path":"/media/Workings/GSOC-2018/drat/proteus-vue/proteus/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/media/Workings/GSOC-2018/drat/proteus-vue/proteus/node_modules/cache-loader/dist/cjs.js","mtime":1529100185834},{"path":"/media/Workings/GSOC-2018/drat/proteus-vue/proteus/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.bar {\n  fill: steelblue;\n}\n\n.bar:hover {\n  fill: brown;\n}\n\n\n\n #barchart {\n    margin-top: 5%;\n    margin-bottom :5%;\n    padding-top:5%;\n    margin-left:5%\n  }\n",{"version":3,"sources":["barchartcomp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsJA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA","file":"barchartcomp.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"html\">\n\n  <section class=\"barchartcomp\">\n    <v-card id = \"barchart\">\n    <h1>Liecense Breakdown</h1>\n     {{emptynote}}<br>\n    <svg id=\"barsvg\" width=\"400\" height=\"270\">\n     \n    </svg>\n    \n    </v-card>\n  </section>\n\n</template>\n\n<script lang=\"js\">\nimport * as d3 from 'd3';\nimport axios from 'axios';\nimport store from './../store/store'\n// const props={\n//   width:500,\n//   hieght:270\n// };\n// const graphData = [10,20,40,30];\n\n  \n  export default  {\n    name: 'barchartcomp',\n    props: [],\n    store,\n    mounted() {\n        this.loadData();\n        setInterval(function () {\n          this.loadData();\n        }.bind(this), 1000);\n        \n    },\n    data() {\n      return {\n        licenseTypes : [], \n        emptynote : '',\n        // licenseTypes : [{\"type\":\"Binaries\",\"numberOfObjects\":139,\"weight\":0.40406976744186046},{\"type\":\"Apache Licensed\",\"numberOfObjects\":96,\"weight\":0.27906976744186046},{\"type\":\"Generated Documents\",\"numberOfObjects\":0,\"weight\":0.0},{\"type\":\"Archives\",\"numberOfObjects\":0,\"weight\":0.0},{\"type\":\"Notes\",\"numberOfObjects\":1,\"weight\":0.0029069767441860465},{\"type\":\"Standards\",\"numberOfObjects\":108,\"weight\":0.313953488372093}]\n        // dts : [{letter:'A',frequency:0.9167},{letter:'B',frequency:0.4503},{letter:'C',frequency:0.4503}],\n      }\n    },\n    watch:{\n     \n    },\n    methods: {\n        loadData(){\n          // var config = {\n          //   headers: {'Access-Control-Allow-Origin': '*'}\n          // };\n          axios.get(this.origin+\"/proteus/service/repo/breakdown/license\")\n            .then(response=>{\n              this.$log.info(response.data);\n              this.licenseTypes=response.data;\n              this.init();\n            })\n            .catch(error=>{\n              this.emptynote = error.toString();\n              throw error;\n            })\n          // this.init();\n            \n        },\n        init(){\n          \n           this.$log.info(\"c0\");\n          var  svg = d3.select(\"#barsvg\"),\n              margin = {top: 20, right: 20, bottom: 50, left: 40},\n              width = +svg.attr(\"width\") - margin.left - margin.right,\n              height = +svg.attr(\"height\") - margin.top - margin.bottom;\n\n              svg.selectAll(\"*\").remove();\n\n          var x = d3.scaleBand().rangeRound([0, width]).padding(0.1),\n              y = d3.scaleLinear().rangeRound([height, 0]);\n\n          var g = svg.append(\"g\")\n              .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n          \n          \n          var dataval = this.dts;\n          if(dataval.length!=0){\n            this.emptynote='';\n            //x.domain(d3.extent(dataval,function(d) { return d.letter; }));\n            x.domain(dataval.map(function(d) { return d.letter; }));\n            y.domain([0, d3.max(dataval, function(d) { return d.frequency; })]);\n\n            g.append(\"g\")\n                .attr(\"class\", \"axis axis--x\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                \n                .call(d3.axisBottom(x))\n              .selectAll(\"text\")\n              .attr(\"transform\", \"rotate(15)\")\n                .style(\"text-anchor\", \"start\");\n\n\n            \n\n            g.append(\"g\")\n                .attr(\"class\", \"axis axis--y\")\n                .call(d3.axisLeft(y).ticks(10, \"%\"))\n              .append(\"text\")\n                .attr(\"transform\", \"rotate(-90)\")\n                .attr(\"y\", 6)\n                .attr(\"dy\", \"0.71em\")\n                .attr(\"text-anchor\", \"end\")\n                \n                .text(\"Frequency\");\n            \n\n            g.selectAll(\".bar\") \n                .data(dataval)\n              .enter()                 \n                .append(\"rect\")\n                .attr(\"class\", \"bar\")\n                .attr(\"x\", function(d) { return x(d.letter); })\n                .attr(\"y\", function(d) { return y(d.frequency); })\n                .attr(\"width\", x.bandwidth())\n                .attr(\"height\", function(d) { return height - y(d.frequency); });\n\n          }else{\n            this.emptynote = \"Retrieving Data...\";\n          }\n          \n        },\n        \n\n        \n    },\n    computed: {\n      dts:function (){\n        var out = [];\n        for(var item in this.licenseTypes){\n          out.push({letter:this.licenseTypes[item].type,frequency:this.licenseTypes[item].weight});\n        }\n        return out;\n      },\n      origin(){\n        return store.state.origin;\n      }\n    }\n}\n</script>\n\n<style>\n.bar {\n  fill: steelblue;\n}\n\n.bar:hover {\n  fill: brown;\n}\n\n\n\n #barchart {\n    margin-top: 5%;\n    margin-bottom :5%;\n    padding-top:5%;\n    margin-left:5%\n  }\n</style>\n"]}]}