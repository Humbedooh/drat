{"remainingRequest":"/media/Workings/GSOC-2018/drat/proteus-vue/proteus/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/Workings/GSOC-2018/drat/proteus-vue/proteus/src/components/controll_bar.vue?vue&type=style&index=0&id=2c17a87d&scoped=true&lang=css","dependencies":[{"path":"/media/Workings/GSOC-2018/drat/proteus-vue/proteus/src/components/controll_bar.vue","mtime":1530424248283},{"path":"/media/Workings/GSOC-2018/drat/proteus-vue/proteus/node_modules/css-loader/index.js","mtime":1529100185366},{"path":"/media/Workings/GSOC-2018/drat/proteus-vue/proteus/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1521907989000},{"path":"/media/Workings/GSOC-2018/drat/proteus-vue/proteus/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/media/Workings/GSOC-2018/drat/proteus-vue/proteus/node_modules/cache-loader/dist/cjs.js","mtime":1529100185834},{"path":"/media/Workings/GSOC-2018/drat/proteus-vue/proteus/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#controllbarcard{\n  padding: 1%;\n  padding-left: 10%;\n  padding-right: 10%;\n}\n",{"version":3,"sources":["controll_bar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AACA;AACA;AACA;AACA","file":"controll_bar.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"html\">\n  <section class=\"controll-bar\">\n    <v-card id=\"controllbarcard\">\n      <v-layout row wrap>\n        <v-text-field\n        solo\n          name=\"input\"\n          label=\"Repository to search or add to DRAT\"\n          single-line\n          v-model=\"url\"\n          prepend-icon=\"search\"\n        />\n        <v-btn v-on:click=\"search\" color=\"info\">Search</v-btn>\n        <v-btn v-on:click=\"go\" color=\"primary\" medium> Run </v-btn>\n        \n      </v-layout>         \n    </v-card>   \n  </section>\n\n</template>\n\n<script lang=\"js\">\n  import store from './../store/store'\n  import axios from 'axios'\n  export default  {\n    name: 'controllbar',\n    props: [],\n    mounted() {\n\n    },\n    data() {\n      return {\n        msg: 'null for now',\n        url: ''\n      }\n    },\n    methods: {\n        run: function(){\n            console.log(\"test\"+this.url);\n            store.commit(\"invert\");\n            store.commit(\"setCurrentRepo\",this.url);\n        },\n        search:function(){\n          store.commit(\"setprogress\",false);\n        },\n        go: function(){\n          let options = {\n              html: false, // set to true if your message contains HTML tags. eg: \"Delete <b>Foo</b> ?\"\n              loader: false, // set to true if you want the dailog to show a loader after click on \"proceed\"\n              reverse: true, // switch the button positions (left to right, and vise versa)\n              okText: 'Ok',\n              cancelText: 'Close',\n              animation: 'zoom', // Available: \"zoom\", \"bounce\", \"fade\"\n              type: 'basic', // coming soon: 'soft', 'hard'\n              verification: 'continue', // for hard confirm, user will be prompted to type this to enable the proceed button\n              verificationHelp: 'Type \"[+:verification]\" below to confirm', // Verification help text. [+:verification] will be matched with 'options.verification' (i.e 'Type \"continue\" below to confirm')\n              clicksCount: 3, // for soft confirm, user will be asked to click on \"proceed\" btn 3 times before actually proceeding\n              backdropClose: false // set to true to close the dialog when clicking outside of the dialog window, i.e. click landing on the mask \n          };\n          \n          if(this.url.length==0){\n                    this.$dialog.alert({title:\"Invalid input\",body:'Please enter valid path continue'},options)\n            .then(function () {\n                console.log('Clicked on proceed')\n            })\n            .catch(function () {\n                console.log('Clicked on cancel')\n            });\n          }else{\n              store.commit(\"setprogress\",true);\n              store.commit(\"setCurrentRepo\",this.url);\n            axios.post(\"http://localhost:8080/proteus/drat/go\",{\n            dirPath:this.url\n          })\n            .then(response=>{\n              this.$log.info(response.data);              \n            })\n            .catch(error=>{\n              throw error;\n            })\n          }\n          \n        }\n\n    },\n    computed: {\n        currentRepo (){\n          return store.state.currentRepo;\n        } \n    }\n}\n</script>\n\n<style scoped>\n  \n\n  #controllbarcard{\n    padding: 1%;\n    padding-left: 10%;\n    padding-right: 10%;\n  }\n</style>\nrun"]}]}